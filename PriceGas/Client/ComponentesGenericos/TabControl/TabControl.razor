<CascadingValue Value="this">
    @*representará las pestañas y cambiará cuál TabPagese selecciona cuando se hace clic en la pestaña*@
    <div class="btn-group" role="group">
        @foreach (TabPage tabPage in Pages)
        {
            <button type="button"
                    class="btn @GetButtonClass(tabPage)"
                    @onclick=@( () => ActivatePage(tabPage))>

                @if (TabTextTemplate != null)
                {
                    @TabTextTemplate(tabPage)
                }
                else
                {
                    @tabPage.Text
                }
            </button>
        }
    </div>

    @ChildContent
</CascadingValue>

@code {
    // Next line is needed so we are able to add <TabPage> components inside
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public RenderFragment<TabPage> TabTextTemplate { get; set; }

    public TabPage ActivePage { get; set; }
    List<TabPage> Pages = new List<TabPage>();

    //agregar el AddPage método y almacenar la referencia
    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }

    string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "btn-sm btn-primary" : "btn-sm btn-falcon-default";
    }
    void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }
}