@page "/indice-carrusel"
@inject IRepositorio repositorio
@inject IMostrarMensaje mostrarMensajes
@inject IJSRuntime JS
@*@attribute [Authorize(Roles = "Administrador")]*@
@using System.Security.Claims

<Card Class="card">
    <CardHeader Class="card-header">
        <div class="row justify-content-between align-items-center">
            <div class="col-sm-auto">
                <div class="d-inline-block mr-3">
                    <div class="input-group input-group-sm d-flex align-items-center">
                        <Texto Typo="Typo.h5" Class="mb-0">Imagenes del Carrusel</Texto>
                    </div>
                </div>
                <div class="d-inline-block mr-3">
                    <div class="input-group input-group-sm d-flex align-items-center">
                        <Enlace Class="btn btn-outline-dark btn-sm" Href="crear-carrusel"><Icono Icon="fas fa-plus" data-fa-transform="shrink-3 down-2"></Icono><Texto Typo="Typo.normal" Class="d-none d-sm-inline-block ml-1">Crear</Texto></Enlace>
                    </div>
                </div>              
            </div>
        </div>
    </CardHeader>
    <CardBody Class="card-body">
        <Tabla Items="ListadeCarrusel" Context="item">
            <Cabecera>
                <th scope="col">ID</th>
                <th scope="col">Descripción</th>
                <th class="text-end" scope="col">Acciones</th>
            </Cabecera>
            <Filas>
                <td>
                    <Texto Typo="Typo.normal">
                        <Texto Typo="Typo.normal">@item.CarruselId</Texto>
                    </Texto>
                </td>
                <td>
                    <Texto Typo="Typo.normal">@item.Descripcion</Texto>
                </td>
                <td>
                    <Enlace Class="btn p-0" Href="@("editar-carrusel/" + item.CarruselId)" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">
                        <Icono Icon="text-500 fas fa-edit" />
                    </Enlace>
                </td>
            </Filas>
        </Tabla>
    </CardBody>
    <CardFooter Class="card-footer border-top d-flex justify-content-center bg-transparent">
        <Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada" PaginasTotales="paginasTotales" />
    </CardFooter>
</Card>

@code{

    //obtener el user, role y claims
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    ClaimsPrincipal user;

    List<Carrusel> ListadeCarrusel;

    private int paginaActual = 1;
    private int paginasTotales;

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await Cargar(pagina);
    }

    protected override async Task OnInitializedAsync()
    {
        //obtener el user, role y claims
        var authState = await authenticationStateTask;
        user = authState.User;

        await Cargar();
    }

    private async Task Cargar(int pagina = 1)
    {
        var httpResponse = await repositorio.Get<List<Carrusel>>($"api/Carrusel?pagina={pagina}");

        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            paginasTotales = int.Parse(httpResponse.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
            ListadeCarrusel = httpResponse.Response;
        }
    }  
}
