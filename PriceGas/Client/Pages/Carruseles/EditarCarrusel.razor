@page "/editar-carrusel/{CarruselId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensaje mostrarMensaje
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Administrador")]

@if (Carrusel == null)
{
    <LoadingSpinner IsLoading="Procesando" />
}
else
{
    <FormularioCarrusel Carrusel="Carrusel" OnValidSubmit="Editar" Es_EditarCarrusel="true" Titulo="Editar Carrusel" />
}

@code {
    [Parameter] public int CarruselId { get; set; }
    Carrusel Carrusel;
    private bool Procesando = true;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Carrusel>($"api/Carrusel/{CarruselId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("indice-carrusel");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Carrusel = httpResponse.Response;
            Procesando = false;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/Carrusel", Carrusel);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("indice-carrusel");
        }
    }
}
