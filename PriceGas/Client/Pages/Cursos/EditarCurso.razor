@page "/editar-curso/{CursoId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensaje mostrarMensaje
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Administrador")]

@if (Curso == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioCurso Curso="Curso" OnValidSubmit="Editar" Es_EditarCurso="true" Titulo="Editar Curso" />
}

@code {
    [Parameter] public int CursoId { get; set; }
    Curso Curso;   

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Curso>($"api/Curso/{CursoId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("indice-cursos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Curso = httpResponse.Response;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/Curso", Curso);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("indice-cursos");
        }
    }
}
