@page "/editar-tema/{TemaId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensaje mostrarMensaje
@inject NavigationManager navigationManager
@*@attribute [Authorize(Roles = "Administrador")]*@

@if (Tema == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioTema Tema="Tema" OnValidSubmit="Editar" Es_EditarTema="true" Titulo="Editar Tema" />
}

@code {
    [Parameter] public int TemaId { get; set; }
    Tema Tema;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Tema>($"api/Tema/{TemaId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo($"detalles-curso/{Tema.CursoId}");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Tema = httpResponse.Response;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/Tema", Tema);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo($"detalles-curso/{Tema.CursoId}");
        }
    }
}
